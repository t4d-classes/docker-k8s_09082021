version: "3.8"
services:
  wasm:
    build:
      context: .
      dockerfile: TrainingContentSearchWebWasmDockerfile
    ports:
      - "5080:80"
    links:
      - "webapi"
  webapi:
    build:
      context: .
      dockerfile: TrainingContentSearchWebApiDockerfile
    ports:
      - "80:80"
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      TrainingContentCatalog_ConnectionStrings__TrainingCatalogDbServer: mongodb://root:dbpass@mongo:27017
      TrainingContentCatalog_ConnectionStrings__TrainingCatalogCacheServer: redis:6379
    links:
      - "mongo"
      - "redis"
  mongo:
    image: "mongo:5.0.2"
    ports:
      - "27017:27017"
    volumes:
      - "mongodata:/data/db"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: dbpass
  mongo-express:
    image: "mongo-express:0.54.0"
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: dbpass
      ME_CONFIG_MONGODB_URL: mongodb://root:dbpass@mongo:27017/
    links:
      - "mongo"
  redis:
    image: "redis:6.2.5-alpine"
    ports:
      - "6379:6379"
    volumes:
      - "redisdata:/data"
  redisinsight:
    image: "redislabs/redisinsight:1.10.1"
    ports:
      - "8001:8001"
    volumes:
      - "redisinsightdata:/db"
    links:
      - "redis"
volumes:
  mongodata: {}
  redisdata: {}
  redisinsightdata: {}
